buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
        querydslPluginVersion = '1.0.10'
        mapstructVersion = "1.2.0.Final"
    }
}

plugins {
    id "org.springframework.boot" version "2.1.2.RELEASE"
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id "io.franzbecker.gradle-lombok" version "1.14"
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "java"
    id "idea"
}


group = 'org.uhafactory.tour'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation("com.querydsl:querydsl-jpa") // querydsl
    implementation("com.querydsl:querydsl-apt") // querydsl

    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-web')

    //jwt
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.5.3'
    implementation 'org.apache.commons:commons-lang3:3.0'

    //mapstruct
    implementation "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"

    annotationProcessor(
            "org.mapstruct:mapstruct-processor:${mapstructVersion}",
            "org.projectlombok:lombok")

    runtimeOnly('com.h2database:h2')
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.3.2',
            'org.mockito:mockito-junit-jupiter:2.23.4'
    )

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
}

def querydslSrcDir = 'src/main/generated'
querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslSrcDir]
        }
    }

    test {
        java {
            srcDirs "src/test/java"
            srcDirs += "src/integration-test/java"
        }
        resources {
            srcDir "src/test/resources"
        }
    }

    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}